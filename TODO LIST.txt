//----------------------------------------------------------------------------------------------------------------------

1.  The game is composed by several levels and each level has its own board. The board is divided in
    squares, such that each square contains one of the following items:

```
Wall
Warehouse man
Box
Goal position
```
@TODO [DONE]

//----------------------------------------------------------------------------------------------------------------------

2.  Two or more consecutive walls should have the aspect of being only one piece. @TODO [DONE]

//----------------------------------------------------------------------------------------------------------------------

3.  The warehouse man can only move horizontally or vertically. @TODO [DONE]

//----------------------------------------------------------------------------------------------------------------------

4.  Walls cannot be traversed. @TODO [DONE]

//----------------------------------------------------------------------------------------------------------------------

5.  The warehouse man can move boxes pushing them horizontally or vertically. A pushed box can move
    to the next position when this position is free or it is a goal position. @TODO [DONE]

//----------------------------------------------------------------------------------------------------------------------

6.  When a box is placed in a goal position, the color of the box must change to show that it in a goal
    position. @TODO [DONE]

//----------------------------------------------------------------------------------------------------------------------

7.  A goal position only can have one box. @TODO [DONE]

//----------------------------------------------------------------------------------------------------------------------

8.  A level is completed when all boxes are in a goal positon. The application must detect it automatically. @TODO [DONE]

//----------------------------------------------------------------------------------------------------------------------

9.  The different levels are read from files with namelevelN.txt, where N is a positive number. The
    game starts with the first level, that is, filelevel1.txt. When the user passes a level, the program
    will try to read the next level. Level numbers must be consecutive. @TODO [CHANGE FILE NAME FORMAT!]

//----------------------------------------------------------------------------------------------------------------------

10.  The application must include at least 3 different levels with different boards. The first level must be
    the one shown at Figure 1. @TODO [DONE]

//----------------------------------------------------------------------------------------------------------------------

11.  Level files must be plain text files which adhere the following format:
```
The first line contains thenameof the level.
The second line contains two numbers which corresponds to the dimensions,nRowsandnColumns,
of the board
The followingnRowslines contains the elements of the board. Each row must containnColums
with the following elements:
+: Wall
.: Empty square
*: Goal Position
#: Box
W: Warehouse man
```
@TODO [DONE]
```
The following level represents the left board shown in Figure 1.
Initial level
8 8
++++
+ +
+ +++++
+ +
++W*+# +
+ + +
+ ++++
+++++
```
@TODO [DONE]

//----------------------------------------------------------------------------------------------------------------------

12. Levels must be correct: (1) there are at least one box and one goal position; (2) there is only one
    warehouse man; and, (3) the board contains the same number of boxes and goal positions. If the level
    is not correct, the application must spot it, showing an error message and trying to read the next level.
@TODO [PENDING]

//----------------------------------------------------------------------------------------------------------------------

13.  The punctuation of the level is the number of movements done by the warehouse man from the beginning
    of the level. @TODO [DONE].

//----------------------------------------------------------------------------------------------------------------------

14.  The punctuation of the game is the addition of the punctuation of all levels. @TODO [PENDING]

//----------------------------------------------------------------------------------------------------------------------

15.  When the last level, the one whose consecutive number is not found, is passed, the program must show
    a congratulations message with its punctuation (number of movements). @TODO [DONE]

//----------------------------------------------------------------------------------------------------------------------

16.  The game screen must show: (1) the board; (2) the level name; (3) the punctuation of the level; (4)
    the punctutation of the game. @TODO [PENDING (2) & (4)]

//----------------------------------------------------------------------------------------------------------------------

17.  All movements in the current level can be undone, thus, the application must record all the movements
    done since the beginning of the level. @TODO [PENDING]

//----------------------------------------------------------------------------------------------------------------------
18.  A game can be saved and loaded, that is, the application should be able to save in a file selected by
    the user the information needed to restore a game: (1) the current level and its current board, (2) the
    movements done in the current level, which can be undone, (3) the punctuation of the level, (4) the
    total punctuation of the game considering all levels already passed by the user. @TODO [PENDING]

@TODO [BUG FOUND When loading a previously saved level then completing it, the next level map is not loaded proporerly]
//----------------------------------------------------------------------------------------------------------------------
19.  The game menu of the application must allow the user to:
```
Start a new game, that is, reset the game and starts again from the first level
Restart the current level @TODO [DONE]
Undo the last movement @TODO [PENDING]
Save the game @TODO [DONE]
Open a saved game @TODO [PENDING]
Close the application @TODO [DONE]
```
//----------------------------------------------------------------------------------------------------------------------